window.onload = function () { document.querySelectorAll('.video-player').forEach(e => (function (e) { const n = e.parentElement; const o = e.querySelectorAll('source'); const t = {}; o.forEach(e => { const n = e.attributes.src.value.split('/'); const o = n[n.length - 2]; o in t ? t[o].push(e) : t[o] = [e] }); let l = Object.keys(t).sort((e, n) => e - n).pop(); let s = !1; const i = [0.25, 0.5, 0.75, 1, 1.25, 1.5, 1.75, 2]; const c = function () { return `<video id='video-player' poster='${e.poster}' ${e.loop ? 'loop' : ''} ${e.muted ? 'muted' : ''}>\n      ${t[l].length > 0 ? t[l].map(e => `<source src="${e.attributes.src.value}" type="${e.attributes.type.value}"></source>`).join('') : ''}\n      </video>` }; const r = document.createElement('div'); r.innerHTML = `${c()}   \n    <div class='video-controls__element video-controls__action play main' id='video-controls__action'></div>\n      <div class='video-controls'>\n        <div class='video-controls__element video-controls__action play' id='video-controls__action'></div>\n        <div class='video-controls__element video-controls__curr-time' id='video-controls__curr-time'>00:00</div>\n        <progress value='0' max='100' class='video-controls__element video-controls__progress-bar' id='video-controls__progress-bar'></progress>\n        <div class='video-controls__element video-controls__duration' id='video-controls__duration'>00:00</div>\n        <div class='video-controls__element video-controls__mute video-controls__mute_false' id='video-controls__mute'>\n            <?xml version="1.0" encoding="iso-8859-1"?>\n      <svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"\n          viewBox="0 0 480 480" style="enable-background:new 0 0 480 480;" xml:space="preserve">\n      <g>\n          <g>\n              <path d="M278.944,17.577c-5.568-2.656-12.128-1.952-16.928,1.92L106.368,144.009H32c-17.632,0-32,14.368-32,32v128\n                  c0,17.632,14.368,32,32,32h74.368l155.616,124.512c2.912,2.304,6.464,3.488,10.016,3.488c2.368,0,4.736-0.512,6.944-1.568\n                  c5.536-2.688,9.056-8.288,9.056-14.432v-416C288,25.865,284.48,20.265,278.944,17.577z M96,304.009H32v-128h64V304.009z\n                  M256,414.697l-128-102.4V167.721l128-102.4V414.697z" fill="#fefefe"/>\n          </g>\n      </g>\n      <g>\n          <g>\n              <path d="M369.024,126.857c-6.304-6.24-16.416-6.144-22.624,0.128c-6.208,6.304-6.144,16.416,0.128,22.624\n                  c24.16,23.904,37.472,56,37.472,90.4c0,34.4-13.312,66.496-37.472,90.4c-6.304,6.208-6.368,16.32-0.128,22.624\n                  c3.136,3.168,7.264,4.736,11.36,4.736c4.064,0,8.128-1.536,11.264-4.64c30.304-29.92,46.976-70.08,46.976-113.12\n                  C416,196.969,399.328,156.809,369.024,126.857z" fill="#fefefe"/>\n          </g>\n      </g>\n      <g>\n          <g>\n              <path d="M414.144,81.769c-6.272-6.208-16.416-6.176-22.624,0.096c-6.208,6.272-6.176,16.416,0.096,22.624\n                  C427.968,140.553,448,188.681,448,240.009s-20.032,99.456-56.384,135.52c-6.272,6.208-6.304,16.352-0.096,22.624\n                  c3.136,3.168,7.232,4.736,11.36,4.736c4.064,0,8.128-1.536,11.264-4.64C456.608,356.137,480,299.945,480,240.009\n                  C480,180.073,456.608,123.881,414.144,81.769z" fill="#fefefe"/>\n          </g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      </svg>\n        </div>\n        <input type='range' value='100' max='100' title='Громкость' class='video-controls__element video-controls__volume' id='video-controls__volume'>\n        <select title='Скорость' class='video-controls__element video-controls__speed' id='video-controls__speed'>\n        ${i.map(e => `<option value='${100 * e}' ${e === 1 && 'selected'}>x${(e + '').length === 3 ? e + '0' : (e + '').length === 1 ? e + '.00' : e}</option>`)}\n        </select>\n        <select title='Качество' class='video-controls__element video-controls__quality' id='video-controls__quality'>\n        ${Object.keys(t).map(e => `<option value='${e}' ${e === l && 'selected'}>${e}p</option>`)}\n        </select>\n        <a class='video-controls__element video-controls__download' title='Скачать' href='video.mp4' download>\n        <svg viewBox="0 0 512 512" xmlns="http://www.w3.org/2000/svg" fill="#fefefe"><g id="Solid"><path d="m239.029 384.97a24 24 0 0 0 33.942 0l90.509-90.509a24 24 0 0 0 0-33.941 24 24 0 0 0 -33.941 0l-49.539 49.539v-262.059a24 24 0 0 0 -48 0v262.059l-49.539-49.539a24 24 0 0 0 -33.941 0 24 24 0 0 0 0 33.941z"/><path d="m464 232a24 24 0 0 0 -24 24v184h-368v-184a24 24 0 0 0 -48 0v192a40 40 0 0 0 40 40h384a40 40 0 0 0 40-40v-192a24 24 0 0 0 -24-24z" fill="#fefefe"/></g></svg>\n        </a>\n        <div class="video-controls__element video-controls__full-screen" id="video-controls__full-screen">\n        ${new Array(4).fill('<div class="arrow"></div>').join('')}\n        </div>\n      </div>`, r.classList.add('video-container'), e.width > 0 && (r.style.width = e.width + 'px'), e.height > 0 && (r.style.height = e.height + 'px'), e.insertAdjacentElement('beforebegin', r), n.removeChild(e); const d = document.getElementsByTagName('video')[0]; const a = document.getElementById('video-controls__progress-bar'); const v = document.getElementById('video-controls__curr-time'); const _ = document.getElementById('video-controls__duration'); const u = document.querySelectorAll('.video-controls__action'); const m = document.getElementById('video-controls__mute'); const g = document.getElementById('video-controls__volume'); const f = document.getElementById('video-controls__speed'); const p = document.getElementById('video-controls__quality'); const h = document.getElementById('video-controls__full-screen'); function y () { d.paused ? (d.play(), u.forEach(e => { e.classList.add('pause'), e.classList.remove('play') })) : (d.pause(), u.forEach(e => { e.classList.add('play'), e.classList.remove('pause') })), _.innerHTML === '00:00' && (_.innerHTML = L(d.duration)) } function E (e) { let n = 0; for (;e;)n += parseInt(e.offsetLeft), e = e.offsetParent; return n } function L (e) { e = Math.floor(e); const n = Math.floor(e / 60); const o = Math.floor(e - 60 * n); let t = n; let l = o; return n < 10 && (t = '0' + n), o < 10 && (l = '0' + o), t + ':' + l }d.addEventListener('timeupdate', function () { const e = Math.floor(d.currentTime) / (Math.floor(d.duration) / 100); a.value = e, v.innerHTML = L(d.currentTime) }), a.addEventListener('click', function (e) { const n = Math.floor(e.pageX - E(a)); console.log(E(a)); const o = n / (a.offsetWidth / 100); d.currentTime = d.duration * (o / 100) }), u.forEach(e => e.addEventListener('click', y)), d.addEventListener('click', y), m.addEventListener('click', function () { d.volume === 0 ? (d.volume = g.value / 100, m.setAttribute('class', 'video-controls__element video-controls__mute video-controls__mute_false')) : (d.volume = 0, m.setAttribute('class', 'video-controls__element video-controls__mute video-controls__mute_true')) }), g.addEventListener('change', function () { const e = g.value / 100; d.volume = e, d.volume === 0 ? m.setAttribute('class', 'video-controls__element video-controls__mute video-controls__mute_true') : m.setAttribute('class', 'video-controls__element video-controls__mute video-controls__mute_false') }), f.addEventListener('change', function () { const e = f.value / 100; d.playbackRate = e }), p.addEventListener('change', function () { l = p.value, d.innerHTML = c() }), h.addEventListener('click', function () { s ? (r.classList.remove('video-container__full-screen'), h.classList.remove('small-screen')) : (r.classList.add('video-container__full-screen'), h.classList.add('small-screen')), s = !s }) })(e)) }
